
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[R.app GUI 1.70 (7521) x86_64-apple-darwin15.6.0]

[Workspace restored from /Users/seyib/.RData]
[History restored from /Users/seyib/.Rapp.history]

> Package Installer
Error: unexpected symbol in "Package Installer"
trying URL 'https://cran.cnr.berkeley.edu/bin/macosx/el-capitan/contrib/3.5/paleoTS_0.5-1.tgz'
Content type 'application/x-gzip' length 305261 bytes (298 KB)
==================================================
downloaded 298 KB


The downloaded binary packages are in
	/var/folders/l0/4jk9v1r15_l0gn_ry7rf47t40000gs/T//RtmphvmGxd/downloaded_packages
also installing the dependencies ‘mnormt’, ‘doParallel’, ‘foreach’, ‘iterators’

trying URL 'https://cran.cnr.berkeley.edu/bin/macosx/el-capitan/contrib/3.5/mnormt_1.5-5.tgz'
Content type 'application/x-gzip' length 106137 bytes (103 KB)
==================================================
downloaded 103 KB

trying URL 'https://cran.cnr.berkeley.edu/bin/macosx/el-capitan/contrib/3.5/doParallel_1.0.11.tgz'
Content type 'application/x-gzip' length 195324 bytes (190 KB)
==================================================
downloaded 190 KB

trying URL 'https://cran.cnr.berkeley.edu/bin/macosx/el-capitan/contrib/3.5/foreach_1.4.4.tgz'
Content type 'application/x-gzip' length 413498 bytes (403 KB)
==================================================
downloaded 403 KB

trying URL 'https://cran.cnr.berkeley.edu/bin/macosx/el-capitan/contrib/3.5/iterators_1.0.9.tgz'
Content type 'application/x-gzip' length 333556 bytes (325 KB)
==================================================
downloaded 325 KB

trying URL 'https://cran.cnr.berkeley.edu/bin/macosx/el-capitan/contrib/3.5/paleoTS_0.5-1.tgz'
Content type 'application/x-gzip' length 305261 bytes (298 KB)
==================================================
downloaded 298 KB


The downloaded binary packages are in
	/var/folders/l0/4jk9v1r15_l0gn_ry7rf47t40000gs/T//RtmphvmGxd/downloaded_packages
> library(paleoTS)
> sizeData<-read.delim('bodySizes.txt')
Error in file(file, "rt") : cannot open the connection
In addition: Warning message:
In file(file, "rt") :
  cannot open file 'bodySizes.txt': No such file or directory
> sizeData<-read.delim("supplementary_data_file.txt")
Error in file(file, "rt") : cannot open the connection
In addition: Warning message:
In file(file, "rt") :
  cannot open file 'supplementary_data_file.txt': No such file or directory
> sizeData<-read.delim("~/Documents/git/SEYI-Biodiversity/Rexercises/supplementary_data_file.txt")
> timescale<-read.delim("~/Documents/git/SEYI-Biodiversity/Rexercises/timescale.txt")
> n.bins<- nrow(timescale)
> my.mean<-vector(mode="numeric, length=n.bins")
Error in vector(mode = "numeric, length=n.bins") : 
  vector: cannot make a vector of mode 'numeric, length=n.bins'.
> my.mean<-vector(mode="numeric", length=n.bins)
> my.var<-vector(mode="numeric", length=n.bins)
> my.n<-vector(mode="numeric", length=n.bins)
> my.time<- timescale$age_bottom
> my.mean
  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [51] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> names(my.mean)<-timescale$interval_name
> my.mean
          Holocene   Late Pleistocene Middle Pleistocene          Calabrian           Gelasian 
                 0                  0                  0                  0                  0 
        Piacenzian           Zanclean          Messinian          Tortonian       Serravallian 
                 0                  0                  0                  0                  0 
          Langhian        Burdigalian         Aquitanian           Chattian           Rupelian 
                 0                  0                  0                  0                  0 
        Priabonian          Bartonian           Lutetian           Ypresian          Thanetian 
                 0                  0                  0                  0                  0 
         Selandian             Danian      Maastrichtian          Campanian          Santonian 
                 0                  0                  0                  0                  0 
         Coniacian           Turonian         Cenomanian             Albian             Aptian 
                 0                  0                  0                  0                  0 
         Barremian        Hauterivian        Valanginian         Berriasian          Tithonian 
                 0                  0                  0                  0                  0 
      Kimmeridgian          Oxfordian          Callovian          Bathonian           Bajocian 
                 0                  0                  0                  0                  0 
          Aalenian           Toarcian      Pliensbachian         Sinemurian         Hettangian 
                 0                  0                  0                  0                  0 
          Rhaetian             Norian            Carnian           Ladinian            Anisian 
                 0                  0                  0                  0                  0 
         Olenekian             Induan      Changhsingian      Wuchiapingian         Capitanian 
                 0                  0                  0                  0                  0 
           Wordian            Roadian          Kungurian         Artinskian          Sakmarian 
                 0                  0                  0                  0                  0 
          Asselian           Gzhelian         Kasimovian          Moscovian         Bashkirian 
                 0                  0                  0                  0                  0 
      Serpukhovian             Visean        Tournaisian          Famennian           Frasnian 
                 0                  0                  0                  0                  0 
          Givetian           Eifelian             Emsian            Pragian         Lochkovian 
                 0                  0                  0                  0                  0 
           Pridoli         Ludfordian           Gorstian           Homerian       Sheinwoodian 
                 0                  0                  0                  0                  0 
         Telychian           Aeronian         Rhuddanian         Hirnantian             Katian 
                 0                  0                  0                  0                  0 
          Sandbian        Darriwilian          Dapingian             Floian        Tremadocian 
                 0                  0                  0                  0                  0 
          Stage 10       Jiangshanian            Paibian         Guzhangian            Drumian 
                 0                  0                  0                  0                  0 
           Stage 5            Stage 4            Stage 3            Stage 2          Fortunian 
                 0                  0                  0                  0                  0 
> names(my.var)
NULL
> names(my.var)<-timescale$interval_name
> names(my.n)<-timescale$interval_name
> names(my.time)<-timescale$interval_name
> for(i in 1:n.bins){temp.data<-log10(sizedata$max_vol[sizeData$fad_age> timescale$age_top[i] & sizeData$lad_age< timescale$age_bottom[i]]) my.mean[i]<-mean(temp.data) }
Error: unexpected symbol in "for(i in 1:n.bins){temp.data<-log10(sizedata$max_vol[sizeData$fad_age> timescale$age_top[i] & sizeData$lad_age< timescale$age_bottom[i]]) my.mean"
> for(i in 1:n.bins){temp.data<-log10(sizedata$max_vol[sizeData$fad_age> timescale$age_top[i] & sizeData$lad_age< timescale$age_bottom[i]]) my.mean[i]<-mean(temp.data) my.var[i]<-var(temp.data) my.n[i]<-length(temp.data)}
Error: unexpected symbol in "for(i in 1:n.bins){temp.data<-log10(sizedata$max_vol[sizeData$fad_age> timescale$age_top[i] & sizeData$lad_age< timescale$age_bottom[i]]) my.mean"
> for(i in 1:n.bins) {temp.data<-log10(sizeData$max_vol[sizeData$fad_age> timescale$age_top[i] & sizeData$lad_age< timescale$age_bottom[i]]) my.mean[i]<-mean(temp.data) my.var[i]<-var(temp.data) my.n[i]<-length(temp.data)}
Error: unexpected symbol in "for(i in 1:n.bins) {temp.data<-log10(sizeData$max_vol[sizeData$fad_age> timescale$age_top[i] & sizeData$lad_age< timescale$age_bottom[i]]) my.mean"
> for(i in 1:n.bins) {temp.data<-log10(sizeData$max_vol[sizeData$fad_age> timescale$age_top[i] & sizeData$lad_age< timescale$age_bottom[i]]), my.mean[i]<-mean(temp.data), my.var[i]<-var(temp.data), my.n[i]<-length(temp.data)}
Error: unexpected ',' in "for(i in 1:n.bins) {temp.data<-log10(sizeData$max_vol[sizeData$fad_age> timescale$age_top[i] & sizeData$lad_age< timescale$age_bottom[i]]),"
> for(i in 1:n.bins) {temp.data<-log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] & sizeData$lad_age < timescale$age_bottom[i]]) my.mean[i]<-mean(temp.data) my.var[i]<-var(temp.data) my.n[i]<-length(temp.data)}
Error: unexpected symbol in "for(i in 1:n.bins) {temp.data<-log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] & sizeData$lad_age < timescale$age_bottom[i]]) my.mean"
> for(i in 1:n.bins) {temp.data <- log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] & sizeData$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data)
+ my.ts <- as.paleoTS(mm=my.mean, vv=my.var, nn=my.n, tt=my.time, oldest="last") 
+ fit3models(my.ts, method="Joint", pool=FALSE)
+ plot(timescale$age_bottom, my.mean, xlim=c(541,0), type="o", pch=16, xlab="Geologic time (Ma)", ylab=expression(paste("Mean body size (log"[10],"mm)")))
+ 
+ 
+ 
+ 
+ > for(i in 1:n.bins) {temp.data <- log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] & sizeData$lad_age < timescale$age_bottom[i]])
Error: unexpected '>' in:
"
>"
> + my.mean[i] <- mean(temp.data)
Error in mean(temp.data) : object 'temp.data' not found
> + my.var[i] <- var(temp.data)
Error in is.data.frame(x) : object 'temp.data' not found
> + my.n[i] <- length(temp.data)
Error: object 'temp.data' not found
> for(i in 1:n.bins) {temp.data <- log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] & sizeData$lad_age < timescale$age_bottom[i]])
+ + my.mean[i] <- mean(temp.data)
+ + my.var[i] <- var(temp.data)
+ + my.n[i] <- length(temp.data)}
Error in log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] &  : 
  non-numeric argument to mathematical function
> for(i in 1:n.bins) {temp.data <- log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] & sizeData$lad_age < timescale$age_bottom[i]])
+ + my.mean[i] <- mean(temp.data)
+ + my.var[i] <- var(temp.data)
+ + my.n[i] <- length(temp.data)}
Error in log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] &  : 
  non-numeric argument to mathematical function
> for(i in 1:n.bins) {temp.data <- log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] & sizeData$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data)}
Error in log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] &  : 
  non-numeric argument to mathematical function
> for(i in 1:n.bins) {temp.data <- log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] & sizeData$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data)}
Error in log10(sizeData$max_vol[sizeData$fad_age > timescale$age_top[i] &  : 
  non-numeric argument to mathematical function
> head(sizeData)
  PaleoDB_taxon_no    taxon_name   phylum          class          order family   fad_int fad_age
1            35826     Analectis Chordata Actinopterygii Lampridiformes         Rupelian   33.90
2            35827     Ateleopus Chordata Actinopterygii Lampridiformes         Langhian   15.97
3            35828   Bajaichthys Chordata Actinopterygii Lampridiformes         Lutetian   47.80
4            35832       Lampris Chordata Actinopterygii Lampridiformes        Tortonian   11.62
5            35834 Protolophotus Chordata Actinopterygii Lampridiformes         Rupelian   33.90
6            35835      Turkmene Chordata Actinopterygii Lampridiformes        Thanetian   59.20
    lad_int lad_age size_ref range_ref log10_volume log10_max_length
1  Rupelian    28.1       58        24     3.208431         1.698970
2  Holocene     0.0      100        24     6.879592         2.977724
3 Bartonian    38.0       58        24     2.930213         1.602060
4  Holocene     0.0      100        24     8.406058         3.301030
5  Holocene     0.0       58        24     5.861935         2.623249
6 Thanetian    56.0       58        24     4.191489         2.041393
> for(i in 1:n.bins) {temp.data <- (sizeData$log10_volume[sizeData$fad_age > timescale$age_top[i] & sizeData$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data)}
> my.ts <- as.paleoTS(mm=my.mean, vv=my.var, nn=my.n, tt=my.time, oldest="last") 
> fit3models(my.ts, method="Joint", pool=FALSE)

Comparing 3 models [n = 100, method = Joint]

            logL K      AICc Akaike.wt
GRW    -29.90648 3  66.06297     0.333
URW    -30.27521 2  64.67412     0.667
Stasis -75.99010 2 156.10392     0.000
> plot(timescale$age_bottom, my.mean, xlim=c(541,0), type="o", pch=16, xlab="Geologic time (Ma)", ylab=expression(paste("Mean body size (log"[10],"mm)")))
> for(i in 1:n.bins) {ci <- 1.96 * sqrt(my.var[i]) / sqrt(my.n[i])
+ my.x <- rep(timescale$age_bottom[i], 2)
+ my.y <- c(my.mean[i] + ci, my.mean[i] - ci)
+ lines(my.x, my.y, lwd=0.75)}
> x <- rnorm(10)
> x
 [1] -1.39388826  0.10201223 -0.43147145  0.15006395 -0.82071059 -0.53606969  0.14083641  0.02381911
 [9]  2.79595336  0.41298287
> getwd()
[1] "/Users/seyib"
> save(sizeData, timescale, my.ts, file="paleoTS.RData")
> load("paleoTS.RData")
> 